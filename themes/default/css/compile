#!/bin/bash 
# Compiles site styles.
# Do not move this file from where it is.
# Author: Sage Gerard


# Show usage details when no arguments are passed
#################################################

if [ -z $1 ]
then
echo "

Compiles Sass styles once, or in real time.

USAGE:
    compile       - Show this message
    compile once  - compile to \"styles.css\"
    compile watch - compiles when styles change
    compile stop  - stops \"compile watch\"
    compile purge - Terminates all Sass processes owned by user.
                    See notes.

NOTES:
    \"compile watch\" creates a .watching file with the PID of
    the watching process. If the file is changed or removed,
    \"compile stop\" will not work properly.

    In the event that happens, use \"compile purge\"
    "
    exit
fi




# Check for dependencies
########################

if [ ! -f $(which ruby) ] || [ ! -f $(which sass) ];
then
    echo "Ruby or Sass not found. Do the setup in README."
    echo -e "Failing that, scream and break things.\n"
    exit
fi




# Do work depending on argument
###############################

IFILE="style.scss"
OFILE="style.css"
STYLE="compressed"
LFILE="./.watching"
OPTS="--unix-newlines --trace --quiet --no-cache --scss --style $STYLE"

case $1 in

    # Compile to single stylesheet

    "once")
        sass --update $OPTS $IFILE:$OFILE
    ;;



    # Compile as styles change

    "watch")
        if [ -f $LFILE ]
        then
            # make sure no more than one listener exists
            ./compile stop
        fi

        sass --watch $OPTS . & >/dev/null 2>&1
        echo $! > $LFILE
        chmod 400 $LFILE
    ;;



    # Stop last watcher

    "stop")
        if [ -f $LFILE ]
        then
            kill -15 $(cat $LFILE) > /dev/null
            rm -f $LFILE
        else
            echo "No watcher found. Try \"compile purge\""
        fi
    ;;



    # Terminate all owned Sass processes

    "purge")
        if [ -f $LFILE ]
        then
            rm -f $LFILE
        fi

        killall sass
    ;;



    # No other command makes sense.

    *) echo "Unknown command. Run without options for help."
    ;;
esac
